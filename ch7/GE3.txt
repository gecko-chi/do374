[student@workstation ~]$ lab start data-loops

Starting lab.

 · Checking status for lab systems ................................................................................................................................... SUCCESS
 · Preparing local environment ....................................................................................................................................... SUCCESS
 · Ensuring the 'ee-supported-rhel8' container is available .......................................................................................................... SUCCESS
 · Verifying the required packages are installed ..................................................................................................................... SUCCESS
 · Preparing servera ................................................................................................................................................. SUCCESS
 · Creating exercise working directory ............................................................................................................................... SUCCESS
 · Ensuring the 'ee-supported-rhel8' container is available .......................................................................................................... SUCCESS

[student@workstation ~]$ ls
config-ansible    data-loops         develop-practices  git-repos            inventory-yaml  manage-reusing    Music     task-execution  Videos
config-navigator  Desktop            Documents          inventory-dynamic    lab_do374       manage-review     Pictures  task-speed
config-review     develop-navigator  Downloads          inventory-variables  manage-finding  manage-selecting  Public    Templates
[student@workstation ~]$ cd data-loops
[student@workstation data-loops]$ ls
add-groups.yml  add-keys.yml  add-users.yml  ansible.cfg  ansible-navigator.yml  collections  group_vars  inventory  pubkeys
[student@workstation data-loops]$ cat add-groups.yml 
---
- name: First task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add groups
      ansible.builtin.group:
        name: accounts
        state: present
[student@workstation data-loops]$ cat add-keys.yml 
- name: Third task
  hosts: servera.lab.example.com
  gather_facts: no

  tasks:
    - name: Set up authorized keys
      ansible.posix.authorized_key:
        user: developer
        state: present
        key: pubkeys/john/id_rsa.pub
[student@workstation data-loops]$ cat add-users.yml 
- name: Second task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add users and put them in the right groups
      ansible.builtin.user:
        name: john
        append: yes
        groups: accounts
        state: present
[student@workstation data-loops]$ cat ansible.cfg 
[defaults]
inventory=inventory
collections_paths = ./collections

[privilege_escalation]
become=True
become_method=sudo
become_user=root
become_ask_pass=False

[galaxy]
server_list = rh-certified_repo

[galaxy_server.rh-certified_repo]
url=https://hub.lab.example.com/api/galaxy/content/rh-certified
#username=admin
#password=redhat
token=###FIXME###
[student@workstation data-loops]$ cat ansible-navigator.yml 
---
ansible-navigator:
  ansible:
    config: ./ansible.cfg

  execution-environment:
    image: ee-supported-rhel8:2.0
    pull-policy: missing
[student@workstation data-loops]$ ls
add-groups.yml  add-keys.yml  add-users.yml  ansible.cfg  ansible-navigator.yml  collections  group_vars  inventory  pubkeys
[student@workstation data-loops]$ cat inventory 
workstation.lab.example.com
server[a:f].lab.example.com
[student@workstation data-loops]$ ls group_vars/
all
[student@workstation data-loops]$ ls group_vars/all/
my_vars.yml
[student@workstation data-loops]$ cat group_vars/all/my_vars.yml 
#### Group variables ####
rgroups:
  accounts:
    name: accounts
    gid: 7001
  development:
    name: development
    gid: 7002
  manufacturing:
    name: manufacturing
    gid: 7003
  marketing:
    name: marketing
    gid: 7004

#### User variables ####
my_users:
  john:
    name: john
    my_groups:
      - accounts
      - development
  jane:
    name: jane
    my_groups:
      - manufacturing
      - marketing
  tom:
    name: tom
    my_groups:
      - accounts
      - marketing
  lisa:
    name: lisa
    my_groups:
      - development
      - manufacturing

#### Public key variables ####
public_key_lists:
  - username: john
    public_keys:
      - pubkeys/john/id_rsa.pub
      - pubkeys/john/laptop_rsa.pub
  - username: jane
    public_keys:
      - pubkeys/jane/id_rsa.pub
  - username: tom
    public_keys:
      - pubkeys/tom/id_rsa.pub
  - username: lisa
    public_keys:
      - pubkeys/lisa/id_rsa.pub
[student@workstation data-loops]$ cat add-groups.yml 
---
- name: First task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add groups
      ansible.builtin.group:
        name: accounts
        state: present
[student@workstation data-loops]$ vim add-groups.yml 
[student@workstation data-loops]$ cat add-groups.yml
---
- name: First task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add groups
      ansible.builtin.group:
        name: "{{ item['key'] }}"
        state: present
      loop: "{{ rgroup | dict2items }}"
[student@workstation data-loops]$ vim add-groups.yml
[student@workstation data-loops]$ cat add-groups.yml
---
- name: First task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add groups
      ansible.builtin.group:
        name: "{{ item['key'] }}"
        state: present
      loop: "{{ rgroups | dict2items }}"
[student@workstation data-loops]$ 
[student@workstation data-loops]$ 
[student@workstation data-loops]$ ansible-navigator run -m stdout add-groups.yml 

PLAY [First task] **************************************************************

TASK [Add groups] **************************************************************
changed: [servera.lab.example.com] => (item={'key': 'accounts', 'value': {'name': 'accounts', 'gid': 7001}})
changed: [servera.lab.example.com] => (item={'key': 'development', 'value': {'name': 'development', 'gid': 7002}})
changed: [servera.lab.example.com] => (item={'key': 'manufacturing', 'value': {'name': 'manufacturing', 'gid': 7003}})
changed: [servera.lab.example.com] => (item={'key': 'marketing', 'value': {'name': 'marketing', 'gid': 7004}})

PLAY RECAP *********************************************************************
servera.lab.example.com    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[student@workstation data-loops]$ cat group_vars/all/my_vars.yml 
#### Group variables ####
rgroups:
  accounts:
    name: accounts
    gid: 7001
  development:
    name: development
    gid: 7002
  manufacturing:
    name: manufacturing
    gid: 7003
  marketing:
    name: marketing
    gid: 7004

#### User variables ####
my_users:
  john:
    name: john
    my_groups:
      - accounts
      - development
  jane:
    name: jane
    my_groups:
      - manufacturing
      - marketing
  tom:
    name: tom
    my_groups:
      - accounts
      - marketing
  lisa:
    name: lisa
    my_groups:
      - development
      - manufacturing

#### Public key variables ####
public_key_lists:
  - username: john
    public_keys:
      - pubkeys/john/id_rsa.pub
      - pubkeys/john/laptop_rsa.pub
  - username: jane
    public_keys:
      - pubkeys/jane/id_rsa.pub
  - username: tom
    public_keys:
      - pubkeys/tom/id_rsa.pub
  - username: lisa
    public_keys:
      - pubkeys/lisa/id_rsa.pub
[student@workstation data-loops]$ cat add-users.yml 
- name: Second task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add users and put them in the right groups
      ansible.builtin.user:
        name: john
        append: yes
        groups: accounts
        state: present
[student@workstation data-loops]$ vim add-users.yml 
[student@workstation data-loops]$ cat add-users.yml
- name: Second task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add users and put them in the right groups
      ansible.builtin.user:
        name: "{{ item[0]['name] }}"
        append: yes
        groups: "{{ item[1] }}"
        state: present
      loop: "{{ my_users | subelements('my_groups') }}"
[student@workstation data-loops]$ 
[student@workstation data-loops]$ 
[student@workstation data-loops]$ ansible-navigator run -m stdout add-users.yml

PLAY [Second task] *************************************************************

TASK [Add users and put them in the right groups] ******************************
fatal: [servera.lab.example.com]: FAILED! => {"msg": "template error while templating string: unexpected char \"'\" at 11. String: {{ item[0]['name] }}"}

PLAY RECAP *********************************************************************
servera.lab.example.com    : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

[student@workstation data-loops]$ vim add-users.yml 
[student@workstation data-loops]$ cat add-users.yml
- name: Second task
  hosts: servera.lab.example.com
  gather_facts: no
  become: yes

  tasks:
    - name: Add users and put them in the right groups
      ansible.builtin.user:
        name: "{{ item[0]['name'] }}"
        append: yes
        groups: "{{ item[1] }}"
        state: present
      loop: "{{ my_users | subelements('my_groups') }}"
[student@workstation data-loops]$ ansible-navigator run -m stdout add-users.yml

PLAY [Second task] *************************************************************

TASK [Add users and put them in the right groups] ******************************
changed: [servera.lab.example.com] => (item=[{'name': 'john', 'my_groups': ['accounts', 'development']}, 'accounts'])
changed: [servera.lab.example.com] => (item=[{'name': 'john', 'my_groups': ['accounts', 'development']}, 'development'])
changed: [servera.lab.example.com] => (item=[{'name': 'jane', 'my_groups': ['manufacturing', 'marketing']}, 'manufacturing'])
changed: [servera.lab.example.com] => (item=[{'name': 'jane', 'my_groups': ['manufacturing', 'marketing']}, 'marketing'])
changed: [servera.lab.example.com] => (item=[{'name': 'tom', 'my_groups': ['accounts', 'marketing']}, 'accounts'])
changed: [servera.lab.example.com] => (item=[{'name': 'tom', 'my_groups': ['accounts', 'marketing']}, 'marketing'])
changed: [servera.lab.example.com] => (item=[{'name': 'lisa', 'my_groups': ['development', 'manufacturing']}, 'development'])
changed: [servera.lab.example.com] => (item=[{'name': 'lisa', 'my_groups': ['development', 'manufacturing']}, 'manufacturing'])

PLAY RECAP *********************************************************************
servera.lab.example.com    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[student@workstation data-loops]$ cat group_vars/all/my_vars.yml 
#### Group variables ####
rgroups:
  accounts:
    name: accounts
    gid: 7001
  development:
    name: development
    gid: 7002
  manufacturing:
    name: manufacturing
    gid: 7003
  marketing:
    name: marketing
    gid: 7004

#### User variables ####
my_users:
  john:
    name: john
    my_groups:
      - accounts
      - development
  jane:
    name: jane
    my_groups:
      - manufacturing
      - marketing
  tom:
    name: tom
    my_groups:
      - accounts
      - marketing
  lisa:
    name: lisa
    my_groups:
      - development
      - manufacturing

#### Public key variables ####
public_key_lists:
  - username: john
    public_keys:
      - pubkeys/john/id_rsa.pub
      - pubkeys/john/laptop_rsa.pub
  - username: jane
    public_keys:
      - pubkeys/jane/id_rsa.pub
  - username: tom
    public_keys:
      - pubkeys/tom/id_rsa.pub
  - username: lisa
    public_keys:
      - pubkeys/lisa/id_rsa.pub
[student@workstation data-loops]$ 
[student@workstation data-loops]$ 
[student@workstation data-loops]$ cat add-keys.yml 
- name: Third task
  hosts: servera.lab.example.com
  gather_facts: no

  tasks:
    - name: Set up authorized keys
      ansible.posix.authorized_key:
        user: developer
        state: present
        key: pubkeys/john/id_rsa.pub
[student@workstation data-loops]$ vim add-keys.yml 
[student@workstation data-loops]$ cat add-keys.yml
- name: Third task
  hosts: servera.lab.example.com
  gather_facts: no

  tasks:
    - name: Set up authorized keys
      ansible.posix.authorized_key:
        user: developer
        state: present
        key: "{{ lookup('file', item) }}"
      loop: "{{ public_key_lists | map(attribute='public_keys') | flatten }}"
[student@workstation data-loops]$ ls
add-groups-artifact-2022-03-16T05:31:42.249975+00:00.json  add-users-artifact-2022-03-16T05:34:17.864556+00:00.json  ansible.cfg            collections  pubkeys
add-groups.yml                                             add-users-artifact-2022-03-16T05:34:56.166462+00:00.json  ansible-navigator.log  group_vars
add-keys.yml                                               add-users.yml                                             ansible-navigator.yml  inventory
[student@workstation data-loops]$ ansible-galaxy collection install -r collections/requirements.yml -p ./collections
Starting galaxy collection install process
Process install dependency map
ERROR! Error when finding available api versions from rh-certified_repo (https://hub.lab.example.com/api/galaxy/content/rh-certified) (HTTP Code: 403, Message: Forbidden)
[student@workstation data-loops]$ firefox https://hub.lab.example.com & 
[1] 31095
[student@workstation data-loops]$ vim ansible.cfg 
[student@workstation data-loops]$ cat ansible.cfg
[defaults]
inventory=inventory
collections_paths = ./collections

[privilege_escalation]
become=True
become_method=sudo
become_user=root
become_ask_pass=False

[galaxy]
server_list = rh-certified_repo

[galaxy_server.rh-certified_repo]
url=https://hub.lab.example.com/api/galaxy/content/rh-certified
#username=admin
#password=redhat
token=7832b2a28239bcdf19807f47cdef8458ece94cba
[student@workstation data-loops]$ 
[student@workstation data-loops]$ 
[student@workstation data-loops]$ 
[student@workstation data-loops]$ ansible-galaxy collection install -r collections/requirements.yml -p ./collections
Starting galaxy collection install process
Process install dependency map
Starting collection install process
Downloading https://hub.lab.example.com/api/galaxy/v3/artifacts/collections/rh-certified/ansible-posix-1.3.0.tar.gz to /home/student/.ansible/tmp/ansible-local-314347lhznyry/tmpihbpd636/ansible-posix-1.3.0-_h2t43st
Installing 'ansible.posix:1.3.0' to '/home/student/data-loops/collections/ansible_collections/ansible/posix'
ansible.posix:1.3.0 was installed successfully
[1]+  Done                    firefox https://hub.lab.example.com
[student@workstation data-loops]$ ansible-navigator run add-keys.yml -m stdout 

PLAY [Third task] **************************************************************

TASK [Set up authorized keys] **************************************************
changed: [servera.lab.example.com] => (item=pubkeys/john/id_rsa.pub)
changed: [servera.lab.example.com] => (item=pubkeys/john/laptop_rsa.pub)
changed: [servera.lab.example.com] => (item=pubkeys/jane/id_rsa.pub)
changed: [servera.lab.example.com] => (item=pubkeys/tom/id_rsa.pub)
changed: [servera.lab.example.com] => (item=pubkeys/lisa/id_rsa.pub)

PLAY RECAP *********************************************************************
servera.lab.example.com    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

[student@workstation data-loops]$ cd
[student@workstation ~]$ lab finish  data-loops

Finishing lab.

 · Checking lab systems .............................................................................................................................................. SUCCESS
 · Cleaning up servera ............................................................................................................................................... SUCCESS

[student@workstation ~]$ 

